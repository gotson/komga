import { httpTyped } from '@/mocks/api/httpTyped'

export const libraries = [
  {
    id: '1',
    name: 'eBooks',
    root: '/ebooks',
    importComicInfoBook: true,
    importComicInfoSeries: true,
    importComicInfoCollection: true,
    importComicInfoReadList: true,
    importComicInfoSeriesAppendVolume: true,
    importEpubBook: true,
    importEpubSeries: true,
    importMylarSeries: true,
    importLocalArtwork: true,
    importBarcodeIsbn: false,
    scanForceModifiedTime: false,
    scanInterval: 'DISABLED',
    scanOnStartup: false,
    scanCbx: true,
    scanPdf: true,
    scanEpub: true,
    scanDirectoryExclusions: ['#recycle', '@Recycle', '@eaDir'],
    repairExtensions: false,
    convertToCbz: false,
    emptyTrashAfterScan: true,
    seriesCover: 'FIRST',
    hashFiles: true,
    hashPages: false,
    hashKoreader: false,
    analyzeDimensions: false,
    oneshotsDirectory: '_oneshots',
    unavailable: false,
  },
  {
    id: '2',
    name: 'Comics',
    root: '/books',
    importComicInfoBook: true,
    importComicInfoSeries: true,
    importComicInfoCollection: true,
    importComicInfoReadList: true,
    importComicInfoSeriesAppendVolume: true,
    importEpubBook: true,
    importEpubSeries: true,
    importMylarSeries: true,
    importLocalArtwork: true,
    importBarcodeIsbn: true,
    scanForceModifiedTime: false,
    scanInterval: 'DISABLED',
    scanOnStartup: false,
    scanCbx: true,
    scanPdf: true,
    scanEpub: true,
    scanDirectoryExclusions: ['#recycle', '@Recycle', '@eaDir'],
    repairExtensions: false,
    convertToCbz: false,
    emptyTrashAfterScan: true,
    seriesCover: 'FIRST_UNREAD_OR_FIRST',
    hashFiles: true,
    hashPages: false,
    hashKoreader: false,
    analyzeDimensions: true,
    oneshotsDirectory: null,
    unavailable: false,
  },
]

export const librariesHandlers = [
  httpTyped.get('/api/v1/libraries', ({ response }) => response(200).json(libraries)),
]
